#
# Copyright (C) 2025 Christian Schmitt, Tim Frey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring.application.name=druid-mcp-server
# Import prompts configuration
spring.config.import=optional:classpath:prompts.properties
# NOTE: You must disable the banner and the console logging
# to allow the STDIO transport to work !!!
spring.main.banner-mode=off
# logging.pattern.console=
# Spring AI MCP Server configuration
spring.ai.mcp.server.name=druid-mcp-server
spring.ai.mcp.server.version=1.2.2
# Protocol: STREAMABLE is the new default (option override deprecated)
spring.ai.mcp.server.protocol=streamable
# spring.ai.mcp.server.stdio=false
# spring.main.web-application-type=none
# Druid configuration
druid.router.url=${DRUID_ROUTER_URL:http://localhost:8888}
# Druid authentication (optional)
# Can be set via properties or environment variables:
# druid.auth.username=your-username
# druid.auth.password=your-password
# Environment variables: DRUID_AUTH_USERNAME, DRUID_AUTH_PASSWORD
druid.auth.username=${DRUID_AUTH_USERNAME:}
druid.auth.password=${DRUID_AUTH_PASSWORD:}
# Druid SSL/TLS configuration
# Enable SSL support (uses system default truststore)
druid.ssl.enabled=${DRUID_SSL_ENABLED:false}
# Skip SSL certificate verification (for development/testing only)
druid.ssl.skip-verification=${DRUID_SSL_SKIP_VERIFICATION:false}
# Server configuration
server.port=8080
# Logging configuration
logging.file.name=./target/druid-mcp-server.log

# OAuth2 Security for SSE/Streamable HTTP (disabled by default)
# When enabled, the SSE endpoint (/sse) and Streamable HTTP endpoint (/mcp, /mcp/**)
# are protected with OAuth2 Bearer JWT tokens issued by the built-in Authorization Server.
# Token endpoint: /oauth2/token (client-credentials grant)
# JWKS endpoint: /.well-known/jwks.json
# Default client: oidc-client / secret
# Example: curl -XPOST "http://localhost:8080/oauth2/token" --data grant_type=client_credentials --user "oidc-client:secret"
# Then pass Authorization: Bearer <token> to your MCP client.

druid.mcp.security.oauth2.enabled=${DRUID_MCP_SECURITY_OAUTH2_ENABLED:true}
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=client_credentials

server.servlet.session.cookie.name=DRUID_MCP_SERVER_SESSION
logging.level.org.springframework.security=TRACE

# Read-only mode configuration
# When enabled, only HTTP GET is permitted; POST is allowed only for /druid/v2/sql
# Additionally, non-read-only MCP tools are disabled.
druid.mcp.readonly.enabled=${DRUID_MCP_READONLY:false}

#Granted Authorities=[ROLE_ANONYMOUS]]
#
#
#Granted Authorities=[]